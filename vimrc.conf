" ====================
" Plugins
" ====================

call plug#begin('~/.local/share/nvim/plugged')

" Command-line fuzzy finder
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --bin' }
Plug 'junegunn/fzf.vim'

let $FZF_DEFAULT_COMMAND = 'ag --hidden --ignore .git -l -g ""'

" A dark Vim/Neovim color scheme
Plug 'joshdick/onedark.vim'

" A collection of language packs for Vim
Plug 'sheerun/vim-polyglot'

" Asynchronous Lint Engine
Plug 'w0rp/ale'

let g:ale_fix_on_save = 1
let g:ale_linters = {
\  'ruby': ['reek'],
\  'javascript': ['eslint'],
\}
let g:ale_fixers = {
\  '*': ['remove_trailing_lines', 'trim_whitespace'],
\  'ruby': ['rubocop'],
\  'javascript': ['eslint'],
\}

" Shows a git diff in sign column
Plug 'mhinz/vim-signify'

" An extensible & universal comment plugin
Plug 'tomtom/tcomment_vim'

" Quoting/parenthesizing made simple
Plug 'tpope/vim-surround'

" Display the indention levels
Plug 'yggdroot/indentline'

" A light and configurable statusline
Plug 'itchyny/lightline.vim'
Plug 'maximbaz/lightline-ale'

let g:lightline = {
\  'colorscheme': 'onedark',
\  'active': {
\    'right': [
\      ['linter_checking', 'linter_errors', 'linter_warnings'],
\      ['lineinfo'],
\      ['percent'],
\      ['fileformat', 'fileencoding', 'filetype']
\    ]
\  },
\  'component_expand': {
\    'linter_checking': 'lightline#ale#checking',
\    'linter_warnings': 'lightline#ale#warnings',
\    'linter_errors': 'lightline#ale#errors',
\  },
\  'component_type': {
\    'linter_checking': 'left',
\    'linter_warnings': 'warning',
\    'linter_errors': 'error',
\  }
\}

call plug#end()

" ====================
" General
" ====================

" Theme
syntax on
colorscheme onedark

" Use 24-bit (true-color) mode
set termguicolors

" Show line numbers
set number

" Let lightline do the work
set noshowmode

" Always use the clipboard for all operations
set clipboard+=unnamedplus

" ====================
" Text, tab and indent
" ====================

" Use spaces instead of tabs
set expandtab

" Be smart ;)
set smarttab
set smartindent

" 1 tab == 2 spaces
set shiftwidth=2
set tabstop=2

" Break lines at word to 80 cols
set linebreak
set textwidth=80

" Auto-indent new lines
set autoindent

" ====================
" Turn off swap files
" ====================

set nobackup
set noswapfile
set nowb
